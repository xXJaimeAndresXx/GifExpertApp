{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","className","GifExpertApp","categories","key","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OAEQ,0BAAMC,SAdO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAC,OAAIP,GAAJ,mBAAkBO,OACjCN,EAAc,KAIlBO,QAAQC,IAAI,kBASJ,2BAAOC,KAAM,OAAOC,MAAQX,EAAYY,SAtB3B,SAACT,GACtBK,QAAQC,IAAIN,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,Y,uBCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC0EC,UAAUH,GADpF,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAOAC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAhBvB,kBAoBXM,GApBW,4CAAH,sDCKPO,EAAU,SAAC,GAAgB,IAAff,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZhB,mBAAS,CAC/BuB,KAAM,GACNS,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAwBtC,OAjBAC,qBAAU,WACNpB,EAAQC,GACPoB,MAAK,SAAAC,GAEEH,EAAS,CACLX,KAAKc,EACLL,SAAQ,SAQrB,CAAChB,IAGGiB,EDrBuBK,CAAatB,GAA/Ba,EAFuB,EAE5BN,KAAaS,EAFe,EAEfA,QAWpB,OACI,oCAEA,wBAAIO,UAAW,qCAAqCvB,GAEnDgB,GAAW,yCAEV,yBAAKO,UAAU,aAILV,EAAOJ,KAAI,SAAAC,UEOhBc,EA/BK,WAAQ,MAGYxC,mBAAS,CAAC,cAHtB,mBAGjByC,EAHiB,KAGL1C,EAHK,KAMxB,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEI0C,EAAWhB,KAAK,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACAA,SAAWA,EACX0B,IAAK1B,U,MCjBtB2B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0f3f2f34.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange= (e)=>{\r\n        console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (InputValue.trim().length>2){\r\n            setCategories(c=> [InputValue,...c]);\r\n            setInputValue('');\r\n\r\n        }\r\n        \r\n        console.log('Submit hecho');\r\n\r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit= {handleSubmit}>\r\n                \r\n                {/* <h2>Add Category</h2> */}\r\n                <input type= \"text\" value= {InputValue} onChange={handleInputChange}>\r\n\r\n                </input>\r\n            </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=fp3oB1JW0hZPV6NyI4R21hiY8thPeKDW&q=${encodeURI(category)}&limit=10`\r\n\r\n    const resp=  await fetch(url);\r\n   \r\n    const {data} = await resp.json();\r\n\r\n    \r\n\r\n  \r\n\r\n\r\n     const gifs= data.map(img => {\r\n         return{\r\n             id: img.id,\r\n             title: img.title,\r\n             url: img.images.downsized_medium.url\r\n         }\r\n     })\r\n\r\n     return gifs;\r\n\r\n\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n   \r\n    const {data:images, loading}= useFetchGifs(category);\r\n\r\n    // const [images, setImages] = useState([])\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //     .then(setImages);\r\n    // },[category])\r\n\r\n    \r\n    // getGifs();\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <h3 className= \"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p>Loading...</p>}\r\n        \r\n        { <div className=\"card-grid\">\r\n            \r\n          \r\n                    {\r\n                    images.map(img=>(\r\n                        // <li key= {img.id}>{img.title}</li>\r\n                        <GifGridItem\r\n                        key = {img.id}\r\n                        {...img}\r\n                        />\r\n                        \r\n                    ))\r\n                    }\r\n                \r\n            \r\n        </div> }\r\n        </>           \r\n    )\r\n    \r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n            \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                            })\r\n\r\n            \r\n\r\n            \r\n        })\r\n       \r\n    }, [category])\r\n    \r\n\r\n    return state;\r\n}   ","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp= (  ) => {\r\n\r\n    // const categories =['One Punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        \r\n\r\n        <ol>\r\n            {\r\n            categories.map( category =>(\r\n                 <GifGrid \r\n                 category= {category}\r\n                 key={category}\r\n                 \r\n                 />\r\n            ))\r\n            \r\n            }\r\n        </ol>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n"],"sourceRoot":""}